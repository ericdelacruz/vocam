@model IEnumerable<SODAPortalMvcApplication.ViewModel.CustomerModel>
@{
    ViewBag.Title = "Index";
   var isSCVerified = TempData["VerifiedSC"] as Nullable<bool>;
 
    
    var SalesCode = Session["SalesCode"] as SODAPortalMvcApplication.ViewModel.VerifyModel;
    //get only items that have active recurring profile
    var ActiveSubscription = Model.Where(cust => cust.paypal.Active);
    //flag if there are active subscription
    var isActiveSubs = ActiveSubscription.Count() > 0;
}

<style>
    .serviceChargeCode {
        font-weight: normal;
        font-size: 20px;
        color: #f8981d;
    }
    .priceSub {
        line-height: 35px;
        margin: 15px;
    }
</style>

<div class="portalWrap border">
    @RenderPage("usermenu.cshtml")

    <div class="portalCont displayInline margin15">

       
       
        @*If currently active then display subscription details else show purchase additional license page*@
        @if (isActiveSubs)
        {
             <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title" style="margin-top:0px !important; padding-top:0px !important;">Current Subscription</h3>
            </div>
            <div class="panel-body">

                <table class="currentSub" border="0" cellspacing="0" cellpadding="0" style="width:100%;">
                    <tr class="currSubHead">
                        <td width="550" bgcolor="">DETAILS</td>
                        @*Show label if it is already end of contract*@
                        @if(Model.First().contract  != null && (Model.First().contract.DateEnd.ToUniversalTime() - DateTime.UtcNow).TotalDays <= 0)
                        {                                             
                             <td>CANCEL SUBSCRIPTION</td>
                        }
                        
                    @foreach(var customer in ActiveSubscription)
                    {
                        
                        string displayFormat = "{0} License/s : {1} initial for {2} month/s plus {1} recurring every {3} month/s";
                        //if you wish to add more currency list go to the definition of getCultureInfo and edit the mapping there
                        var culture = SODAPortalMvcApplication.ViewModel.VerifyModel.getCultureInfo((SODAPortalMvcApplication.ViewModel.VerifyModel.Currency)Enum.Parse(typeof(SODAPortalMvcApplication.ViewModel.VerifyModel.Currency),SalesCode.region.Currency));
                       
                        var pricepaid = customer.paypal.TotalAmt; 
                        //display current subscription details
                         switch(customer.customer.RecurringType)
                       {
                           case 1://monthly
                              
                            <tr>
                                
                                <td>@string.Format(displayFormat, customer.customer.Licenses, pricepaid.ToString("C",culture), customer.price.FirstMonthFree ? 2 : 1, 1) </td>
                                @if(customer.contract != null && (customer.contract.DateEnd.ToUniversalTime() - DateTime.UtcNow).TotalDays <= 0 )
                                { 
                                 <td align="center"><a href=@Url.Action("unsubscribe", new {transid = customer.paypal.ECTransID })><button style="width:100px; margin-left:20%;" type="submit" class="fl btn btn-sm btn-primary" onclick="return confirm('Are you sure you want to delete the item?');">Cancel</button></a></td>
                                }
                            </tr>
                               break;
                           case 2: //3 months
                             <tr>
                             
                                 <td>@string.Format(displayFormat, customer.customer.Licenses, pricepaid.ToString("C", culture), customer.price.FirstMonthFree ? 4 : 3, 3) </td>
                                 @if (customer.contract != null && (customer.contract.DateEnd.ToUniversalTime() - DateTime.UtcNow).TotalDays <= 0)
                                 {
                                   <td align="center"><a href=@Url.Action("unsubscribe", new {transid = customer.paypal.ECTransID })><button style="width:100px; margin-left:20%;" type="submit" class="fl btn btn-sm btn-primary" onclick="return confirm('Are you sure you want to delete the item?');">Cancel</button></a></td>
                                 }
                            </tr>
                               break;
                           case 3: //6 months
                            <tr>
                                
                                <td>@string.Format(displayFormat, customer.customer.Licenses, pricepaid.ToString("C", culture), customer.price.FirstMonthFree ? 7 : 6, 6) </td>
                                @if (customer.contract != null && (customer.contract.DateEnd.ToUniversalTime() - DateTime.UtcNow).TotalDays <= 0)
                                {
                                        <td align="center"><a href=@Url.Action("unsubscribe", new {transid = customer.paypal.ECTransID })><button style="width:100px; margin-left:20%;" type="submit" class="fl btn btn-sm btn-primary" onclick="return confirm('Are you sure you want to delete the item?');">Cancel</button></a></td>
                                }
                            </tr>
                               break;
                       }
                       
                    }
                   

                </table>
            </div>
        </div>
       
        }
        else//render purchse additional license page
        {
            
            @RenderPage("_additonal_license.cshtml", new { SalesCode = SalesCode, LicenseType = Model.Last().customer.RecurringType });
        }
    </div>

</div>
