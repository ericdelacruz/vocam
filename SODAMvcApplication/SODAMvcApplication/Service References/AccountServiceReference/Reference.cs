//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18331
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SODAMvcApplication.AccountServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/SODAwcfService.Models")]
    [System.SerializableAttribute()]
    public partial class Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateLoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EmailVerifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PASSWORDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string USERNAMEField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Birthdate {
            get {
                return this.BirthdateField;
            }
            set {
                if ((this.BirthdateField.Equals(value) != true)) {
                    this.BirthdateField = value;
                    this.RaisePropertyChanged("Birthdate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactNo {
            get {
                return this.ContactNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNoField, value) != true)) {
                    this.ContactNoField = value;
                    this.RaisePropertyChanged("ContactNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateLogin {
            get {
                return this.DateLoginField;
            }
            set {
                if ((this.DateLoginField.Equals(value) != true)) {
                    this.DateLoginField = value;
                    this.RaisePropertyChanged("DateLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EmailVerified {
            get {
                return this.EmailVerifiedField;
            }
            set {
                if ((this.EmailVerifiedField.Equals(value) != true)) {
                    this.EmailVerifiedField = value;
                    this.RaisePropertyChanged("EmailVerified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PASSWORD {
            get {
                return this.PASSWORDField;
            }
            set {
                if ((object.ReferenceEquals(this.PASSWORDField, value) != true)) {
                    this.PASSWORDField = value;
                    this.RaisePropertyChanged("PASSWORD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Role {
            get {
                return this.RoleField;
            }
            set {
                if ((this.RoleField.Equals(value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string USERNAME {
            get {
                return this.USERNAMEField;
            }
            set {
                if ((object.ReferenceEquals(this.USERNAMEField, value) != true)) {
                    this.USERNAMEField = value;
                    this.RaisePropertyChanged("USERNAME");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountServiceReference.IAccountService")]
    public interface IAccountService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/addAccount", ReplyAction="http://tempuri.org/IAccountService/addAccountResponse")]
        int addAccount(SODAMvcApplication.AccountServiceReference.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/updateAccount", ReplyAction="http://tempuri.org/IAccountService/updateAccountResponse")]
        int updateAccount(SODAMvcApplication.AccountServiceReference.Account Account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/getAccount", ReplyAction="http://tempuri.org/IAccountService/getAccountResponse")]
        SODAMvcApplication.AccountServiceReference.Account[] getAccount(string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/deleteAccount", ReplyAction="http://tempuri.org/IAccountService/deleteAccountResponse")]
        int deleteAccount(string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/AuthenticateUser", ReplyAction="http://tempuri.org/IAccountService/AuthenticateUserResponse")]
        bool AuthenticateUser(string UserName, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/isUserNameExists", ReplyAction="http://tempuri.org/IAccountService/isUserNameExistsResponse")]
        bool isUserNameExists(string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/sendEmailForPassword", ReplyAction="http://tempuri.org/IAccountService/sendEmailForPasswordResponse")]
        bool sendEmailForPassword(SODAMvcApplication.AccountServiceReference.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/Authenticate", ReplyAction="http://tempuri.org/IAccountService/AuthenticateResponse")]
        bool Authenticate(string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/LogOff", ReplyAction="http://tempuri.org/IAccountService/LogOffResponse")]
        void LogOff(string UserName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountService/sendEmailForVerification", ReplyAction="http://tempuri.org/IAccountService/sendEmailForVerificationResponse")]
        bool sendEmailForVerification(string UserName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountServiceChannel : SODAMvcApplication.AccountServiceReference.IAccountService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountServiceClient : System.ServiceModel.ClientBase<SODAMvcApplication.AccountServiceReference.IAccountService>, SODAMvcApplication.AccountServiceReference.IAccountService {
        
        public AccountServiceClient() {
        }
        
        public AccountServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int addAccount(SODAMvcApplication.AccountServiceReference.Account account) {
            return base.Channel.addAccount(account);
        }
        
        public int updateAccount(SODAMvcApplication.AccountServiceReference.Account Account) {
            return base.Channel.updateAccount(Account);
        }
        
        public SODAMvcApplication.AccountServiceReference.Account[] getAccount(string UserName) {
            return base.Channel.getAccount(UserName);
        }
        
        public int deleteAccount(string UserName) {
            return base.Channel.deleteAccount(UserName);
        }
        
        public bool AuthenticateUser(string UserName, string Password) {
            return base.Channel.AuthenticateUser(UserName, Password);
        }
        
        public bool isUserNameExists(string UserName) {
            return base.Channel.isUserNameExists(UserName);
        }
        
        public bool sendEmailForPassword(SODAMvcApplication.AccountServiceReference.Account account) {
            return base.Channel.sendEmailForPassword(account);
        }
        
        public bool Authenticate(string Password) {
            return base.Channel.Authenticate(Password);
        }
        
        public void LogOff(string UserName) {
            base.Channel.LogOff(UserName);
        }
        
        public bool sendEmailForVerification(string UserName) {
            return base.Channel.sendEmailForVerification(UserName);
        }
    }
}
